learn about the Pagenation in Node

--Node Events and Event Emitter

const em = new EventEmitter()
em.on(eventName, (payloadData) =>{}) //listen
em.emit(eventName, payloadData) //emit event

--Node Streams
A readable Stream
const rr = fs.createReadStream('./data.json');
rr.on('data', (data) =>{ //received data event on every file read
  console.log({data});
})

rr.on('end',(data) =>{
  console.log({data}); //received end of stream event
});

--Socket in Node(Scoket.IO)

"npm install socket.io"

-Server Side Code

const server = express();
const app = require('http').createServer(server);
const io = require('socket.io')(app);

io.on('connection', (socket) =>{ //listener to client-side events 'msg'
  console.log('socket',socket.id)

  socket.on('msg',(data) =>{
    console.log({data}) //emitting 'serverMsg' for Client-side
});

app.listen(port)

  })
  socket.emit('serverMSG',{server:'hello'}
});

--Client Side Code

// embeding client-side library which will be downloaded from module installed on Server
<script  src="/socket.io/socket.io.js"></script>

<script>
const  socket  =  io();
console.log('socket',socket.id)

socket.emit('msg',{player:'one'}) // emitting 'msg' to server-side

socket.on('serverMsg',(data)=>{  // listener to server-side events 'serverMsg'
   console.log({data});
})

</script>